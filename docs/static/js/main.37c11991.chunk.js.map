{"version":3,"sources":["helpers/task3.js","components/Navbar/Navbar.js","helpers/task1.js","hooks/useForm.js","components/Task1Screen/Task1Screen.js","helpers/task2.js","components/Task2Screen/Task2Screen.js","components/Task3Screen/Task3Screen.js","routes/AppRouter.js","DaraptiApp.js","index.js"],"names":["origBoard","Navbar","className","to","type","id","activeClassName","exact","obtenerElPequenioMasCercano","n","f2","f3","getZeckendorfTheoremResult","out","f","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","Task1Screen","formValues","htmlFor","required","onChange","style","fontWeight","fontSize","JSON","stringify","isPalin","str","st","end","getPalin","res","i","findMinInsert","length","undefined","output","counter","index","Task2Screen","s","huPlayer","aiPlayer","winCombos","cells","endgame","text","startGame","cell_s","endgame_","text_","display","Array","from","keys","innerText","removeProperty","addEventListener","turnClick","square","turn","checkWin","emptySquares","backgroundColor","removeEventListener","declareWinner","checkTie","minimax","squareId","player","document","getElementById","gameWon","gameOver","board","plays","reduce","a","e","concat","entries","every","elem","indexOf","who","filter","newBoard","availSpots","score","bestMove","moves","move","result","push","bestScore","Task3Screen","td_0","useRef","td_1","td_2","td_3","td_4","td_5","td_6","td_7","td_8","useEffect","current","ref","onClick","AppRouter","path","component","DaraptiApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.37c11991.chunk.js","sourcesContent":["let origBoard;\r\nconst huPlayer = 'O';   //humano\r\nconst aiPlayer = 'X';   //maquina\r\nconst winCombos = [\r\n\t[0, 1, 2],\r\n\t[3, 4, 5],\r\n\t[6, 7, 8], \r\n\t[0, 3, 6],\r\n\t[1, 4, 7],\r\n\t[2, 5, 8],\r\n\t[0, 4, 8],\r\n\t[6, 4, 2]\r\n];  //las alternativas para poder ganar... el numero es el numero de celda\r\nlet cells=[];\r\nlet endgame={};\r\nlet text={};\r\n\r\nexport const startGame=(cell_s, endgame_, text_)=>{\r\n    cells=cell_s;\r\n    // console.log(cells);\r\n    endgame=endgame_;\r\n    text=text_;\r\n\tendgame.style.display = \"none\";\r\n\torigBoard = Array.from(Array(9).keys());\r\n\tfor (var i = 0; i < cells.length; i++) {\r\n\t\tcells[i].innerText = '';\r\n\t\tcells[i].style.removeProperty('background-color');\r\n\t\tcells[i].addEventListener('click', turnClick, false);\r\n\t}\r\n}\r\n\r\n\r\nfunction turnClick(square) {\r\n\tif (typeof origBoard[square.target.id] == 'number') {\r\n\t\tturn(square.target.id, huPlayer)\r\n\t\tif (!checkWin(origBoard, huPlayer) && !checkTie()) turn(bestSpot(), aiPlayer);\r\n\t}\r\n}\r\n\r\nfunction turn(squareId, player) {\r\n\torigBoard[squareId] = player;\r\n\tdocument.getElementById(squareId).innerText = player;\r\n\tlet gameWon = checkWin(origBoard, player)\r\n\tif (gameWon) gameOver(gameWon)\r\n}\r\n\r\nfunction checkWin(board, player) {\r\n\tlet plays = board.reduce((a, e, i) =>\r\n\t\t(e === player) ? a.concat(i) : a, []);\r\n\tlet gameWon = null;\r\n\tfor (let [index, win] of winCombos.entries()) {\r\n\t\tif (win.every(elem => plays.indexOf(elem) > -1)) {\r\n\t\t\tgameWon = {index: index, player: player};\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn gameWon;\r\n}\r\n\r\nfunction gameOver(gameWon) {\r\n\tfor (let index of winCombos[gameWon.index]) {\r\n\t\tdocument.getElementById(index).style.backgroundColor =\r\n\t\t\tgameWon.player === huPlayer ? \"blue\" : \"red\";\r\n\t}\r\n\tfor (var i = 0; i < cells.length; i++) {\r\n\t\tcells[i].removeEventListener('click', turnClick, false);\r\n\t}\r\n\tdeclareWinner(gameWon.player === huPlayer ? \"You win!\" : \"You lose.\");\r\n}\r\n\r\nfunction declareWinner(who) {\r\n\tendgame.style.display = \"block\";\r\n\ttext.innerText = who;\r\n}\r\n\r\nfunction emptySquares() {\r\n\treturn origBoard.filter(s => typeof s == 'number');\r\n}\r\n\r\nfunction bestSpot() {\r\n\treturn minimax(origBoard, aiPlayer).index;\r\n}\r\n\r\nfunction checkTie() {\r\n\tif (emptySquares().length === 0) {\r\n\t\tfor (var i = 0; i < cells.length; i++) {\r\n\t\t\tcells[i].style.backgroundColor = \"green\";\r\n\t\t\tcells[i].removeEventListener('click', turnClick, false);\r\n\t\t}\r\n\t\tdeclareWinner(\"Tie Game!\")\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction minimax(newBoard, player) {\r\n\tvar availSpots = emptySquares();\r\n\r\n\tif (checkWin(newBoard, huPlayer)) {\r\n\t\treturn {score: -10};\r\n\t} else if (checkWin(newBoard, aiPlayer)) {\r\n\t\treturn {score: 10};\r\n\t} else if (availSpots.length === 0) {\r\n\t\treturn {score: 0};\r\n\t}\r\n\tvar moves = [];\r\n\tfor (var i = 0; i < availSpots.length; i++) {\r\n\t\tvar move = {};\r\n\t\tmove.index = newBoard[availSpots[i]];\r\n\t\tnewBoard[availSpots[i]] = player;\r\n\r\n\t\tif (player === aiPlayer) {\r\n\t\t\tlet result = minimax(newBoard, huPlayer);\r\n\t\t\tmove.score = result.score;\r\n\t\t} else {\r\n\t\t\tlet result = minimax(newBoard, aiPlayer);\r\n\t\t\tmove.score = result.score;\r\n\t\t}\r\n\r\n\t\tnewBoard[availSpots[i]] = move.index;\r\n\r\n\t\tmoves.push(move);\r\n\t}\r\n\r\n\tvar bestMove;\r\n\tif(player === aiPlayer) {\r\n\t\tvar bestScore = -10000;\r\n\t\tfor(let i = 0; i < moves.length; i++) {\r\n\t\t\tif (moves[i].score > bestScore) {\r\n\t\t\t\tbestScore = moves[i].score;\r\n\t\t\t\tbestMove = i;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tlet bestScore = 10000;\r\n\t\tfor(let i = 0; i < moves.length; i++) {\r\n\t\t\tif (moves[i].score < bestScore) {\r\n\t\t\t\tbestScore = moves[i].score;\r\n\t\t\t\tbestMove = i;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn moves[bestMove];\r\n}","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom'; /*uso Link y Navlink porque principalmente me deja cambiar de componente sin recargar la pagina */\r\n\r\nexport const Navbar = () => {\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <Link\r\n                    className=\"navbar-brand\"\r\n                    to=\"/\"\r\n                >\r\n                Darapti\r\n                </Link>\r\n\r\n                <button \r\n                    className=\"navbar-toggler\" \r\n                    type=\"button\" \r\n                    data-bs-toggle=\"collapse\" \r\n                    data-bs-target=\"#navbarNavAltMarkup\" \r\n                    aria-controls=\"navbarNavAltMarkup\" \r\n                    aria-expanded=\"false\" \r\n                    aria-label=\"Toggle navigation\"\r\n                    >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n\r\n                        <NavLink\r\n                            \r\n                            activeClassName=\"active\"\r\n                            className=\"nav-item nav-link\"\r\n                            exact\r\n                            to=\"/task1\"\r\n                        >\r\n                            Tarea1\r\n                        </NavLink>\r\n\r\n                        <NavLink\r\n                            activeClassName=\"active\"\r\n                            className=\"nav-item nav-link\"\r\n                            to=\"/task2\"\r\n                        >\r\n                            Tarea2\r\n                        </NavLink>\r\n\r\n                        <NavLink\r\n                            activeClassName=\"active\"\r\n                            className=\"nav-item nav-link\"\r\n                            to=\"/task3\"\r\n                        >\r\n                            Tarea3\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n","const obtenerElPequenioMasCercano = (n) => {\r\n    if (n === 0 || n === 1){\r\n        return n;\r\n    }\r\n    let f1 = 0, f2 = 1, f3 = 1;\r\n    while (f3 <= n) {\r\n        f1 = f2;\r\n        f2 = f3;\r\n        f3 = f1 + f2;\r\n    }\r\n    return f2;\r\n}\r\n\r\n\r\nexport const getZeckendorfTheoremResult = (n) => {\r\n    if (n === 0) {\r\n        return [];\r\n    } else if (n < 0) {\r\n        return null;\r\n    }\r\n    let out = [];\r\n    while (n > 0) {\r\n        const f = obtenerElPequenioMasCercano(n);\r\n        out=[...out,f];\r\n        n = n - f;\r\n    }\r\n    return out;\r\n}","import { useState } from \"react\"\r\n\r\n//Custom Hook que se va a encargar de manejar los formularios. Podemos agregarle cualquier cantidad de logica. \r\nexport const useForm = (initialState={}) => {\r\n    const [values, setValues] = useState(initialState); //recibe el nombre de los campos que requiere\r\n\r\n    const reset = ()=>{\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        }); // lo de [target.name] se llaman computed properties, así se maneja cuando se quiere agregar una nueva propiedad con el valor de un objeto.\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React from 'react'\r\nimport { getZeckendorfTheoremResult } from '../../helpers/task1';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const Task1Screen = () => {\r\n    const [formValues, handleInputChange] = useForm({n:0});\r\n    const {n}=formValues;\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-3\">\r\n                <h1 className=\"text-center\">Zechendorf’s Theorem </h1>\r\n                <p className=\"text-left mt-5\">Returns the Zeckendorf representation of a given integer n as a list\r\n                    of Fibonacci numbers in decreasing order. Return an empty list for n = 0 and None/nil for\r\n                    negative n.</p>\r\n                <div className=\"mt-4\">\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"nValue\" className=\"form-label\">n Value</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"n\"\r\n                                className=\"form-control\"\r\n                                id=\"nValue\"\r\n                                required={true}\r\n                                onChange={handleInputChange}\r\n                                value={n}\r\n                            />\r\n                        </div>\r\n                        <div className=\"task1_cuota\">\r\n                            <div>\r\n                                <small>Zeckendorf Theorem Result</small>\r\n                                <div>\r\n                                    <span style={{ fontWeight: 'bold', fontSize: 1.2 + \"rem\" }}>\r\n                                        <pre>{JSON.stringify(getZeckendorfTheoremResult(n), null, 3)}</pre>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","const isPalin = (str, st, end) => {\r\n    while (st < end) {\r\n        if (str[st] !== str[end]) {\r\n            return false;\r\n        }\r\n        st++;\r\n        end--;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst findMinInsert = (str, n) => {\r\n    for (let i = n - 1; i >= 0; i--) {\r\n        if (isPalin(str, 0, i)) {\r\n            return (n - i - 1);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPalin = (str) => {\r\n    const res = findMinInsert(str, str.length);\r\n    // console.log(res);\r\n    if (res === undefined) {\r\n        return \"La palabra debe tener al menos 1 caracter\"\r\n    } else if (res === 0) {\r\n        return \"Ya es un palíndromo\";\r\n    } else {\r\n        //agregamos los ultimos 'res' caracteres al inicio de la palabra\r\n        let output = \"\";\r\n        let counter = 0;\r\n        for (let index = str.length - 1; index >= 0; index--) {\r\n            if (counter < res) {\r\n                const element = str[index];\r\n                output += element;\r\n                counter++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return output+str;\r\n    }\r\n}","import React from 'react'\r\nimport { getPalin } from '../../helpers/task2';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const Task2Screen = () => {\r\n    const [formValues, handleInputChange] = useForm({ s: \"\" });\r\n    const { s } = formValues;\r\n\r\n    /**Un palíndromo, también llamado palíndromo, palíndroma o palindroma,\r\n     *  es una palabra o frase que se lee igual en un sentido que en otro. */\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-3\">\r\n                <h1 className=\"text-center\">Shortest Palindrome</h1>\r\n                <p className=\"text-left mt-5\">You are given a string s. You can convert it to a palindrome by adding characters in front of it.\r\n                    Return the shortest palindrome you can find by performing this transformation.</p>\r\n                <div className=\"mt-4\">\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"sValue\" className=\"form-label\">s Value (string)</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"s\"\r\n                                className=\"form-control\"\r\n                                id=\"sValue\"\r\n                                required={true}\r\n                                onChange={handleInputChange}\r\n                                value={s}\r\n                            />\r\n                        </div>\r\n                        <div className=\"task2_cuota\">\r\n                            <div>\r\n                                <small>Shortest Palindrome</small>\r\n                                <div>\r\n                                    <span style={{ fontWeight: 'bold', fontSize: 1.2 + \"rem\" }}>\r\n                                        {\r\n                                            getPalin(s)\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { startGame } from '../../helpers/task3';\r\n\r\nexport const Task3Screen = () => {\r\n    const td_0 = useRef();\r\n    const td_1 = useRef();\r\n    const td_2 = useRef();\r\n    const td_3 = useRef();\r\n    const td_4 = useRef();\r\n    const td_5 = useRef();\r\n    const td_6 = useRef();\r\n    const td_7 = useRef();\r\n    const td_8 = useRef();\r\n    const endgame = useRef();\r\n    const text = useRef();\r\n\r\n    useEffect(() => {\r\n        startGame([\r\n            td_0.current,\r\n            td_1.current,\r\n            td_2.current,\r\n            td_3.current,\r\n            td_4.current,\r\n            td_5.current,\r\n            td_6.current,\r\n            td_7.current,\r\n            td_8.current\r\n        ],\r\n        endgame.current,\r\n        text.current\r\n        );\r\n    }, [])\r\n\r\n    const startGame1=()=>{\r\n        startGame([\r\n            td_0.current,\r\n            td_1.current,\r\n            td_2.current,\r\n            td_3.current,\r\n            td_4.current,\r\n            td_5.current,\r\n            td_6.current,\r\n            td_7.current,\r\n            td_8.current\r\n        ],\r\n        endgame.current,\r\n        text.current\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-3\">\r\n                <h1 className=\"text-center\">Three-in-line</h1>\r\n                <p className=\"text-left mt-5\">Make a game of three-in-line with two players.</p>\r\n                <div className=\"mt-4\">\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <td ref={td_0} id=\"0\"></td>\r\n                                <td ref={td_1} id=\"1\"></td>\r\n                                <td ref={td_2} id=\"2\"></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td ref={td_3}id=\"3\"></td>\r\n                                <td ref={td_4} id=\"4\"></td>\r\n                                <td ref={td_5} id=\"5\"></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td ref={td_6} id=\"6\"></td>\r\n                                <td ref={td_7} id=\"7\"></td>\r\n                                <td ref={td_8} id=\"8\"></td>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                    <div className=\"task3_endgame\" ref={endgame}>\r\n                        <div className=\"text\" ref={text}></div>\r\n                    </div>\r\n                    <button \r\n                        onClick={startGame1}\r\n                        className=\"btn btn-outline-primary\"\r\n                    >Replay</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { Navbar } from '../components/Navbar/Navbar';\r\nimport {Task1Screen} from '../components/Task1Screen/Task1Screen';\r\nimport {Task2Screen} from '../components/Task2Screen/Task2Screen';\r\nimport {Task3Screen} from '../components/Task3Screen/Task3Screen';\r\n\r\nexport const AppRouter = () => { \r\n \r\n    return (\r\n        <Router>\r\n            <Navbar/>\r\n            <div className=\"container mt-3\">\r\n                <Switch>\r\n                    <Route exact path=\"/task1\" component={Task1Screen}/>\r\n                    <Route exact path=\"/task2\" component={Task2Screen}/>\r\n                    <Route exact path=\"/task3\" component={Task3Screen}/>\r\n                    <Redirect to=\"/task1\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './routes/AppRouter'\r\n \r\n\r\nexport const DaraptiApp = () => {\r\n    return (\r\n        <>\r\n            <AppRouter/>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { DaraptiApp } from './DaraptiApp';\r\n\r\nimport './styles/styles.scss';\r\n\r\nReactDOM.render(\r\n  <DaraptiApp/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}